on: [push]

jobs:
  deploy-app-a:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: npm ci
        working-directory: ./app-a
      - run: npm run build
        working-directory: ./app-a
      - uses: ryand56/r2-upload-action@latest
        with:
          destination-dir: ./
          keep-file-fresh: true
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-bucket: ${{ secrets.R2_BUCKET_APP_A }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          source-dir: app-a/dist
  deploy-app-b:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: npm ci
        working-directory: ./app-b
      - run: npm run build
        working-directory: ./app-b
      - uses: ryand56/r2-upload-action@latest
        with:
          destination-dir: ./
          keep-file-fresh: true
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-bucket: ${{ secrets.R2_BUCKET_APP_B }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          source-dir: app-b/dist
  deploy-app-c:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: npm ci
        working-directory: ./app-c
      - run: npm run build
        working-directory: ./app-c
      - uses: ryand56/r2-upload-action@latest
        with:
          destination-dir: ./
          keep-file-fresh: true
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-bucket: ${{ secrets.R2_BUCKET_APP_C }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          source-dir: app-c/dist
